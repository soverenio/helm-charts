apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-digger
  namespace: {{ .Release.Namespace }}
  {{- if .Values.digger.deploymentAnnotations }}
  annotations:
    {{- toYaml .Values.digger.deploymentAnnotations | nindent 4 }}
  {{- end }}
  labels:
    {{- include "digger.labels" . | nindent 4 }}
    {{- if .Values.digger.deploymentLabels }}
    {{- toYaml .Values.digger.deploymentLabels | nindent 4 }}
    {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "digger.matchLabels" . | nindent 6 }}
  template:
    metadata:
      {{- if .Values.digger.podAnnotations }}
      annotations:
        {{- toYaml .Values.digger.podAnnotations | nindent 8 }}
      {{- end }}
      labels:
        {{- include "digger.labels" . | nindent 8 }}
        {{- if .Values.digger.podLabels }}
        {{- toYaml .Values.digger.podLabels | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.digger.priorityClassName }}
      priorityClassName: {{ .Values.digger.priorityClassName }}
      {{- end }}
      serviceAccountName: {{ .Release.Name }}-digger
      containers:
      - name: digger
        image: {{ .Values.digger.image.name }}:{{ .Values.digger.image.tag }}
        imagePullPolicy: {{ .Values.digger.image.pullPolicy }}
        ports:
        - name: http
          containerPort: 9000
        - name: metrics
          containerPort: 9090
        env:
        - name: "SVRN_DIGGER_STATSCLIENT_TOKEN"
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-token
              key: token
        - name: "SVRN_DIGGER_STATSCLIENT_CLIENT_ADDRESS"
          value: "stats.soveren.io:443"
        - name: "SVRN_DIGGER_STATSCLIENT_CLIENT_TIMEOUT"
          value: "10s"
        - name: "SVRN_DIGGER_STATSCLIENT_CLIENT_USETLS"
          value: "true"
        - name: "SVRN_DIGGER_STATSCLIENT_CLIENT_INSECURE"
          value: "false"
        - name: "SVRN_DIGGER_STOPTIMEOUT"
          value: "60s"
        - name: "SVRN_DIGGER_LOG_FORMATTER"
          value: "text"
        - name: "SVRN_DIGGER_DETECTIONTOOL_URI"
          value: "http://{{ .Release.Name }}-detection-tool:{{ .Values.detectionTool.service.port }}"
        - name: "SVRN_DIGGER_KAFKA_BROKERS"
          {{- if .Values.kafka.embedded.enabled }}
          value: "{{ .Release.Name }}-kafka:{{ .Values.kafka.embedded.service.port }}"
          {{- else }}
          value: "{{ join "," .Values.kafka.external.brokers }}"
          {{- end }}
        - name: "SVRN_DIGGER_KAFKA_CONSUMER_GROUP"
          value: "worker_1"
        - name: "SVRN_DIGGER_KAFKA_CONSUMER_HANDLERNAME"
          value: "worker_1"
        - name: "SVRN_DIGGER_KAFKA_CONSUMER_TOPIC"
          value: "{{ .Values.kafka.topics.eventsTopicName }}"
        - name: "SVRN_DIGGER_KAFKA_CONSUMERHEARTBEAT_GROUP"
          value: "worker_2"
        - name: "SVRN_DIGGER_KAFKA_CONSUMERHEARTBEAT_HANDLERNAME"
          value: "worker_2"
        - name: "SVRN_DIGGER_KAFKA_CONSUMERHEARTBEAT_TOPIC"
          value: "{{ .Values.kafka.topics.heartbeatTopicName }}"
        - name: "SVRN_DIGGER_KAFKA_RESENDSLEEP"
          value: "1s"
        - name: "SVRN_DIGGER_INSTRUMENTATION_SERVER_LISTENADDRESS"
          value: "0.0.0.0:9000"
        - name: "SVRN_DIGGER_INSTRUMENTATION_TRACING_AGENTENDPOINT"
          value: ""
        - name: "SVRN_DIGGER_INSTRUMENTATION_TRACING_COLLECTORENDPOINT"
          value: ""
        - name: "SVRN_DIGGER_INSTRUMENTATION_TRACING_PROBABILITYRATE"
          value: "0"
        - name: SVRN_DIGGER_RESOLVER_KUBERNETES_ENABLED
          value: "true"
        resources:
          {{- toYaml .Values.digger.resources | nindent 10 }}
        readinessProbe:
          tcpSocket:
            port: 9000
          timeoutSeconds: 3
      restartPolicy: Always
