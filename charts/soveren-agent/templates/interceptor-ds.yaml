---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Release.Name }}-interceptor
  namespace: {{ .Release.Namespace }}
  {{- if .Values.interceptor.daemonSetAnnotations }}
  annotations:
    {{- toYaml .Values.interceptor.daemonSetAnnotations | nindent 4 }}
  {{- end }}
  labels:
    {{- include "interceptor.labels" . | nindent 4 }}
    {{- if .Values.interceptor.daemonSetLabels }}
    {{- toYaml .Values.interceptor.daemonSetLabels | nindent 4 }}
    {{- end }}
spec:
  selector:
    matchLabels:
      {{- include "interceptor.matchLabels" . | nindent 6 }}
  template:
    metadata:
      {{- if .Values.interceptor.podAnnotations }}
      annotations:
        {{- toYaml .Values.interceptor.podAnnotations | nindent 8 }}
      {{- end }}
      labels:
        {{- include "interceptor.labels" . | nindent 8 }}
        {{- if .Values.interceptor.podLabels }}
        {{- toYaml .Values.interceptor.podLabels | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.interceptor.priorityClassName }}
      priorityClassName: {{ .Values.interceptor.priorityClassName }}
      {{- end }}
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      hostPID: true
      serviceAccountName: {{ .Release.Name }}-interceptor
      containers:
      - name: interceptor
        image: {{ .Values.interceptor.image.name }}:{{ .Values.interceptor.image.tag }}
        imagePullPolicy: {{ .Values.interceptor.image.pullPolicy }}
        env:
        - name: "SVRN_INTERCEPTOR_LOG_LEVEL"
          value: "info"
        - name: "SVRN_INTERCEPTOR_SOURCE_OBSERVINGPERIOD"
          value: "30s"
        - name: "SVRN_INTERCEPTOR_SOURCE_MAPPERTTL"
          value: "10m0s"
        - name: "SVRN_INTERCEPTOR_SOURCE_ASSEMBLER_TIMEOUT"
          value: "2m0s"
        - name: "SVRN_INTERCEPTOR_SOURCE_ASSEMBLER_MAXBUFFEREDPAGESTOTAL"
          value: "100000"
        - name: "SVRN_INTERCEPTOR_SOURCE_ASSEMBLER_MAXBUFFEREDPAGESPERCONNECTION"
          value: "4000"
        - name: "SVRN_INTERCEPTOR_SOURCE_EXCLUDEDIFACE"
          value: "nflog,bluetooth-monitor,nfqueue,tunl0,ip6tnl0,lo,docker0,services1,eth0,cni0"
        - name: "SVRN_INTERCEPTOR_SOURCE_FILTER_URLFILTER"
          value: "/metrics,/healthz,/api/health,/api/v2/alive,/api/v2/detect"
        - name: "SVRN_INTERCEPTOR_SOURCE_FILTER_RESPONSECODE"
          value: "400"
        - name: "SVRN_INTERCEPTOR_SOURCE_FILTER_REQUESTMETHOD"
          value: "HEAD"
        - name: "SVRN_INTERCEPTOR_NAMESPACEEXPLORER_ENABLED"
          value: "false"
        - name: "SVRN_INTERCEPTOR_NAMESPACEEXPLORER_KUBERNETESNAMESPACE"
          value: "test"
        - name: "SVRN_INTERCEPTOR_NAMESPACEEXPLORER_PIDRESOLVER"
          value: "hostname"
        - name: "SVRN_INTERCEPTOR_PRODUCER_BROKERS"
          {{- if .Values.kafka.embedded.enabled }}
          value: "{{ .Release.Name }}-kafka:{{ .Values.kafka.embedded.service.port }}"
          {{- else }}
          value: "{{ join "," .Values.kafka.external.brokers }}"
          {{- end }}
        - name: "SVRN_INTERCEPTOR_PRODUCER_TOPIC"
          value: "{{ .Values.kafka.topics.eventsTopicName }}"
        - name: "SVRN_INTERCEPTOR_PRODUCER_HEARTBEATTOPIC"
          value: "{{ .Values.kafka.topics.heartbeatTopicName }}"
        resources:
          {{- toYaml .Values.interceptor.resources | nindent 10 }}
        securityContext:
          privileged: true
      terminationGracePeriodSeconds: 30
